#ifndef DES_H
#define DES_H

#ifdef __cplusplus
extern "C" {
#endif

#define DES_BLOCK_BITS 64  /* bits of DES algoithm block */
#define DES_BLOCK_SIZE 8  /* bytes of DES algoithm block */
#define DES_KEY_SIZE 8 /* bytes of DES algoithm double key */

    /**
     * @brief Generate subkeys
     * @param[in] key original key
     * @param[out] subKeys generated subkeys
     * @return 0 OK
     * @return 1 Failed
     */
    int des_make_subkeys(const unsigned char key[8], unsigned char subKeys[16][6]);

    /**
     * @brief DES encrypt single block
     * @param[in] input plaintext, [length = DES_BLOCK_SIZE]
     * @param[in] subKeys subKeys
     * @param[out] output ciphertext, [length = DES_BLOCK_SIZE]
     */
    void des_encrypt_block(const unsigned char *input, unsigned char subKeys[16][6], unsigned char *output);

    /**
     * @brief DES decrypt single block
     * @param[in] input ciphertext, [length = DES_BLOCK_SIZE]
     * @param[in] subKeys subKeys
     * @param[out] output plaintext, [length = DES_BLOCK_SIZE]
     */
    void des_decrypt_block(const unsigned char *input, unsigned char subKeys[16][6], unsigned char *output);

#ifdef __cplusplus
}
#endif

#endif // DES_H

#include <stdint.h>
#include <string.h>


// 将64位块分割为左右两个32位块
#define SPLIT_BLOCK(block, left, right) \
    left = (block >> 32) & 0xFFFFFFFF; \
    right = block & 0xFFFFFFFF;

// 将两个32位块合并为一个64位块
#define COMBINE_BLOCK(left, right) (((uint64_t)(left) << 32) | (uint64_t)(right))


// 子密钥生成中的第一次置换表和第二次置换表
static const int PC1[56] = {
    57, 49, 41, 33, 25, 17,  9, 
     1, 58, 50, 42, 34, 26, 18, 
    10,  2, 59, 51, 43, 35, 27, 
    19, 11,  3, 60, 52, 44, 36, 
    63, 55, 47, 39, 31, 23, 15, 
     7, 62, 54, 46, 38, 30, 22, 
    14,  6, 61, 53, 45, 37, 29, 
    21, 13,  5, 28, 20, 12,  4
};

static const int PC2[48] = {
    14, 17, 11, 24,  1,  5, 
     3, 28, 15,  6, 21, 10, 
    23, 19, 12,  4, 26,  8, 
    16,  7, 27, 20, 13,  2, 
    41, 52, 31, 37, 47, 55, 
    30, 40, 51, 45, 33, 48, 
    44, 49, 39, 56, 34, 53, 
    46, 42, 50, 36, 29, 32
};

// 循环左移位数
static const int rotations[16] = { 
    1, 1, 2, 2, 2, 2, 2, 2, 
    1, 2, 2, 2, 2, 2, 2, 1 
};

// 初始置换表和逆置换表
static const int IP[64] = {
    58, 50, 42, 34, 26, 18, 10, 2,
    60, 52, 44, 36, 28, 20, 12, 4,
    62, 54, 46, 38, 30, 22, 14, 6,
    64, 56, 48, 40, 32, 24, 16, 8,
    57, 49, 41, 33, 25, 17,  9, 1,
    59, 51, 43, 35, 27, 19, 11, 3,
    61, 53, 45, 37, 29, 21, 13, 5,
    63, 55, 47, 39, 31, 23, 15, 7
};
static const int IP_INV[64] = {
    40, 8, 48, 16, 56, 24, 64, 32,
    39, 7, 47, 15, 55, 23, 63, 31,
    38, 6, 46, 14, 54, 22, 62, 30,
    37, 5, 45, 13, 53, 21, 61, 29,
    36, 4, 44, 12, 52, 20, 60, 28,
    35, 3, 43, 11, 51, 19, 59, 27,
    34, 2, 42, 10, 50, 18, 58, 26,
    33, 1, 41,  9, 49, 17, 57, 25
};

// // 扩展置换表
// static const int E[48] = {
//     32,  1,  2,  3,  4,  5,
//      4,  5,  6,  7,  8,  9,
//      8,  9, 10, 11, 12, 13,
//     12, 13, 14, 15, 16, 17,
//     16, 17, 18, 19, 20, 21,
//     20, 21, 22, 23, 24, 25,
//     24, 25, 26, 27, 28, 29,
//     28, 29, 30, 31, 32,  1
// };
static const uint64_t E_TABLE[4][256] = {
    {
        0x000000000000ULL,        0x002800000000ULL,        0x004000000000ULL,        0x006800000000ULL,
        0x008000000000ULL,        0x00a800000000ULL,        0x00c000000000ULL,        0x00e800000000ULL,
        0x050000000000ULL,        0x052800000000ULL,        0x054000000000ULL,        0x056800000000ULL,
        0x058000000000ULL,        0x05a800000000ULL,        0x05c000000000ULL,        0x05e800000000ULL,
        0x0a0000000000ULL,        0x0a2800000000ULL,        0x0a4000000000ULL,        0x0a6800000000ULL,
        0x0a8000000000ULL,        0x0aa800000000ULL,        0x0ac000000000ULL,        0x0ae800000000ULL,
        0x0f0000000000ULL,        0x0f2800000000ULL,        0x0f4000000000ULL,        0x0f6800000000ULL,
        0x0f8000000000ULL,        0x0fa800000000ULL,        0x0fc000000000ULL,        0x0fe800000000ULL,
        0x100000000000ULL,        0x102800000000ULL,        0x104000000000ULL,        0x106800000000ULL,
        0x108000000000ULL,        0x10a800000000ULL,        0x10c000000000ULL,        0x10e800000000ULL,
        0x150000000000ULL,        0x152800000000ULL,        0x154000000000ULL,        0x156800000000ULL,
        0x158000000000ULL,        0x15a800000000ULL,        0x15c000000000ULL,        0x15e800000000ULL,
        0x1a0000000000ULL,        0x1a2800000000ULL,        0x1a4000000000ULL,        0x1a6800000000ULL,
        0x1a8000000000ULL,        0x1aa800000000ULL,        0x1ac000000000ULL,        0x1ae800000000ULL,
        0x1f0000000000ULL,        0x1f2800000000ULL,        0x1f4000000000ULL,        0x1f6800000000ULL,
        0x1f8000000000ULL,        0x1fa800000000ULL,        0x1fc000000000ULL,        0x1fe800000000ULL,
        0x200000000000ULL,        0x202800000000ULL,        0x204000000000ULL,        0x206800000000ULL,
        0x208000000000ULL,        0x20a800000000ULL,        0x20c000000000ULL,        0x20e800000000ULL,
        0x250000000000ULL,        0x252800000000ULL,        0x254000000000ULL,        0x256800000000ULL,
        0x258000000000ULL,        0x25a800000000ULL,        0x25c000000000ULL,        0x25e800000000ULL,
        0x2a0000000000ULL,        0x2a2800000000ULL,        0x2a4000000000ULL,        0x2a6800000000ULL,
        0x2a8000000000ULL,        0x2aa800000000ULL,        0x2ac000000000ULL,        0x2ae800000000ULL,
        0x2f0000000000ULL,        0x2f2800000000ULL,        0x2f4000000000ULL,        0x2f6800000000ULL,
        0x2f8000000000ULL,        0x2fa800000000ULL,        0x2fc000000000ULL,        0x2fe800000000ULL,
        0x300000000000ULL,        0x302800000000ULL,        0x304000000000ULL,        0x306800000000ULL,
        0x308000000000ULL,        0x30a800000000ULL,        0x30c000000000ULL,        0x30e800000000ULL,
        0x350000000000ULL,        0x352800000000ULL,        0x354000000000ULL,        0x356800000000ULL,
        0x358000000000ULL,        0x35a800000000ULL,        0x35c000000000ULL,        0x35e800000000ULL,
        0x3a0000000000ULL,        0x3a2800000000ULL,        0x3a4000000000ULL,        0x3a6800000000ULL,
        0x3a8000000000ULL,        0x3aa800000000ULL,        0x3ac000000000ULL,        0x3ae800000000ULL,
        0x3f0000000000ULL,        0x3f2800000000ULL,        0x3f4000000000ULL,        0x3f6800000000ULL,
        0x3f8000000000ULL,        0x3fa800000000ULL,        0x3fc000000000ULL,        0x3fe800000000ULL,
        0x400000000001ULL,        0x402800000001ULL,        0x404000000001ULL,        0x406800000001ULL,
        0x408000000001ULL,        0x40a800000001ULL,        0x40c000000001ULL,        0x40e800000001ULL,
        0x450000000001ULL,        0x452800000001ULL,        0x454000000001ULL,        0x456800000001ULL,
        0x458000000001ULL,        0x45a800000001ULL,        0x45c000000001ULL,        0x45e800000001ULL,
        0x4a0000000001ULL,        0x4a2800000001ULL,        0x4a4000000001ULL,        0x4a6800000001ULL,
        0x4a8000000001ULL,        0x4aa800000001ULL,        0x4ac000000001ULL,        0x4ae800000001ULL,
        0x4f0000000001ULL,        0x4f2800000001ULL,        0x4f4000000001ULL,        0x4f6800000001ULL,
        0x4f8000000001ULL,        0x4fa800000001ULL,        0x4fc000000001ULL,        0x4fe800000001ULL,
        0x500000000001ULL,        0x502800000001ULL,        0x504000000001ULL,        0x506800000001ULL,
        0x508000000001ULL,        0x50a800000001ULL,        0x50c000000001ULL,        0x50e800000001ULL,
        0x550000000001ULL,        0x552800000001ULL,        0x554000000001ULL,        0x556800000001ULL,
        0x558000000001ULL,        0x55a800000001ULL,        0x55c000000001ULL,        0x55e800000001ULL,
        0x5a0000000001ULL,        0x5a2800000001ULL,        0x5a4000000001ULL,        0x5a6800000001ULL,
        0x5a8000000001ULL,        0x5aa800000001ULL,        0x5ac000000001ULL,        0x5ae800000001ULL,
        0x5f0000000001ULL,        0x5f2800000001ULL,        0x5f4000000001ULL,        0x5f6800000001ULL,
        0x5f8000000001ULL,        0x5fa800000001ULL,        0x5fc000000001ULL,        0x5fe800000001ULL,
        0x600000000001ULL,        0x602800000001ULL,        0x604000000001ULL,        0x606800000001ULL,
        0x608000000001ULL,        0x60a800000001ULL,        0x60c000000001ULL,        0x60e800000001ULL,
        0x650000000001ULL,        0x652800000001ULL,        0x654000000001ULL,        0x656800000001ULL,
        0x658000000001ULL,        0x65a800000001ULL,        0x65c000000001ULL,        0x65e800000001ULL,
        0x6a0000000001ULL,        0x6a2800000001ULL,        0x6a4000000001ULL,        0x6a6800000001ULL,
        0x6a8000000001ULL,        0x6aa800000001ULL,        0x6ac000000001ULL,        0x6ae800000001ULL,
        0x6f0000000001ULL,        0x6f2800000001ULL,        0x6f4000000001ULL,        0x6f6800000001ULL,
        0x6f8000000001ULL,        0x6fa800000001ULL,        0x6fc000000001ULL,        0x6fe800000001ULL,
        0x700000000001ULL,        0x702800000001ULL,        0x704000000001ULL,        0x706800000001ULL,
        0x708000000001ULL,        0x70a800000001ULL,        0x70c000000001ULL,        0x70e800000001ULL,
        0x750000000001ULL,        0x752800000001ULL,        0x754000000001ULL,        0x756800000001ULL,
        0x758000000001ULL,        0x75a800000001ULL,        0x75c000000001ULL,        0x75e800000001ULL,
        0x7a0000000001ULL,        0x7a2800000001ULL,        0x7a4000000001ULL,        0x7a6800000001ULL,
        0x7a8000000001ULL,        0x7aa800000001ULL,        0x7ac000000001ULL,        0x7ae800000001ULL,
        0x7f0000000001ULL,        0x7f2800000001ULL,        0x7f4000000001ULL,        0x7f6800000001ULL,
        0x7f8000000001ULL,        0x7fa800000001ULL,        0x7fc000000001ULL,        0x7fe800000001ULL
    },
    {
        0x000000000000ULL,        0x000002800000ULL,        0x000004000000ULL,        0x000006800000ULL,
        0x000008000000ULL,        0x00000a800000ULL,        0x00000c000000ULL,        0x00000e800000ULL,
        0x000050000000ULL,        0x000052800000ULL,        0x000054000000ULL,        0x000056800000ULL,
        0x000058000000ULL,        0x00005a800000ULL,        0x00005c000000ULL,        0x00005e800000ULL,
        0x0000a0000000ULL,        0x0000a2800000ULL,        0x0000a4000000ULL,        0x0000a6800000ULL,
        0x0000a8000000ULL,        0x0000aa800000ULL,        0x0000ac000000ULL,        0x0000ae800000ULL,
        0x0000f0000000ULL,        0x0000f2800000ULL,        0x0000f4000000ULL,        0x0000f6800000ULL,
        0x0000f8000000ULL,        0x0000fa800000ULL,        0x0000fc000000ULL,        0x0000fe800000ULL,
        0x000100000000ULL,        0x000102800000ULL,        0x000104000000ULL,        0x000106800000ULL,
        0x000108000000ULL,        0x00010a800000ULL,        0x00010c000000ULL,        0x00010e800000ULL,
        0x000150000000ULL,        0x000152800000ULL,        0x000154000000ULL,        0x000156800000ULL,
        0x000158000000ULL,        0x00015a800000ULL,        0x00015c000000ULL,        0x00015e800000ULL,
        0x0001a0000000ULL,        0x0001a2800000ULL,        0x0001a4000000ULL,        0x0001a6800000ULL,
        0x0001a8000000ULL,        0x0001aa800000ULL,        0x0001ac000000ULL,        0x0001ae800000ULL,
        0x0001f0000000ULL,        0x0001f2800000ULL,        0x0001f4000000ULL,        0x0001f6800000ULL,
        0x0001f8000000ULL,        0x0001fa800000ULL,        0x0001fc000000ULL,        0x0001fe800000ULL,
        0x000200000000ULL,        0x000202800000ULL,        0x000204000000ULL,        0x000206800000ULL,
        0x000208000000ULL,        0x00020a800000ULL,        0x00020c000000ULL,        0x00020e800000ULL,
        0x000250000000ULL,        0x000252800000ULL,        0x000254000000ULL,        0x000256800000ULL,
        0x000258000000ULL,        0x00025a800000ULL,        0x00025c000000ULL,        0x00025e800000ULL,
        0x0002a0000000ULL,        0x0002a2800000ULL,        0x0002a4000000ULL,        0x0002a6800000ULL,
        0x0002a8000000ULL,        0x0002aa800000ULL,        0x0002ac000000ULL,        0x0002ae800000ULL,
        0x0002f0000000ULL,        0x0002f2800000ULL,        0x0002f4000000ULL,        0x0002f6800000ULL,
        0x0002f8000000ULL,        0x0002fa800000ULL,        0x0002fc000000ULL,        0x0002fe800000ULL,
        0x000300000000ULL,        0x000302800000ULL,        0x000304000000ULL,        0x000306800000ULL,
        0x000308000000ULL,        0x00030a800000ULL,        0x00030c000000ULL,        0x00030e800000ULL,
        0x000350000000ULL,        0x000352800000ULL,        0x000354000000ULL,        0x000356800000ULL,
        0x000358000000ULL,        0x00035a800000ULL,        0x00035c000000ULL,        0x00035e800000ULL,
        0x0003a0000000ULL,        0x0003a2800000ULL,        0x0003a4000000ULL,        0x0003a6800000ULL,
        0x0003a8000000ULL,        0x0003aa800000ULL,        0x0003ac000000ULL,        0x0003ae800000ULL,
        0x0003f0000000ULL,        0x0003f2800000ULL,        0x0003f4000000ULL,        0x0003f6800000ULL,
        0x0003f8000000ULL,        0x0003fa800000ULL,        0x0003fc000000ULL,        0x0003fe800000ULL,
        0x001400000000ULL,        0x001402800000ULL,        0x001404000000ULL,        0x001406800000ULL,
        0x001408000000ULL,        0x00140a800000ULL,        0x00140c000000ULL,        0x00140e800000ULL,
        0x001450000000ULL,        0x001452800000ULL,        0x001454000000ULL,        0x001456800000ULL,
        0x001458000000ULL,        0x00145a800000ULL,        0x00145c000000ULL,        0x00145e800000ULL,
        0x0014a0000000ULL,        0x0014a2800000ULL,        0x0014a4000000ULL,        0x0014a6800000ULL,
        0x0014a8000000ULL,        0x0014aa800000ULL,        0x0014ac000000ULL,        0x0014ae800000ULL,
        0x0014f0000000ULL,        0x0014f2800000ULL,        0x0014f4000000ULL,        0x0014f6800000ULL,
        0x0014f8000000ULL,        0x0014fa800000ULL,        0x0014fc000000ULL,        0x0014fe800000ULL,
        0x001500000000ULL,        0x001502800000ULL,        0x001504000000ULL,        0x001506800000ULL,
        0x001508000000ULL,        0x00150a800000ULL,        0x00150c000000ULL,        0x00150e800000ULL,
        0x001550000000ULL,        0x001552800000ULL,        0x001554000000ULL,        0x001556800000ULL,
        0x001558000000ULL,        0x00155a800000ULL,        0x00155c000000ULL,        0x00155e800000ULL,
        0x0015a0000000ULL,        0x0015a2800000ULL,        0x0015a4000000ULL,        0x0015a6800000ULL,
        0x0015a8000000ULL,        0x0015aa800000ULL,        0x0015ac000000ULL,        0x0015ae800000ULL,
        0x0015f0000000ULL,        0x0015f2800000ULL,        0x0015f4000000ULL,        0x0015f6800000ULL,
        0x0015f8000000ULL,        0x0015fa800000ULL,        0x0015fc000000ULL,        0x0015fe800000ULL,
        0x001600000000ULL,        0x001602800000ULL,        0x001604000000ULL,        0x001606800000ULL,
        0x001608000000ULL,        0x00160a800000ULL,        0x00160c000000ULL,        0x00160e800000ULL,
        0x001650000000ULL,        0x001652800000ULL,        0x001654000000ULL,        0x001656800000ULL,
        0x001658000000ULL,        0x00165a800000ULL,        0x00165c000000ULL,        0x00165e800000ULL,
        0x0016a0000000ULL,        0x0016a2800000ULL,        0x0016a4000000ULL,        0x0016a6800000ULL,
        0x0016a8000000ULL,        0x0016aa800000ULL,        0x0016ac000000ULL,        0x0016ae800000ULL,
        0x0016f0000000ULL,        0x0016f2800000ULL,        0x0016f4000000ULL,        0x0016f6800000ULL,
        0x0016f8000000ULL,        0x0016fa800000ULL,        0x0016fc000000ULL,        0x0016fe800000ULL,
        0x001700000000ULL,        0x001702800000ULL,        0x001704000000ULL,        0x001706800000ULL,
        0x001708000000ULL,        0x00170a800000ULL,        0x00170c000000ULL,        0x00170e800000ULL,
        0x001750000000ULL,        0x001752800000ULL,        0x001754000000ULL,        0x001756800000ULL,
        0x001758000000ULL,        0x00175a800000ULL,        0x00175c000000ULL,        0x00175e800000ULL,
        0x0017a0000000ULL,        0x0017a2800000ULL,        0x0017a4000000ULL,        0x0017a6800000ULL,
        0x0017a8000000ULL,        0x0017aa800000ULL,        0x0017ac000000ULL,        0x0017ae800000ULL,
        0x0017f0000000ULL,        0x0017f2800000ULL,        0x0017f4000000ULL,        0x0017f6800000ULL,
        0x0017f8000000ULL,        0x0017fa800000ULL,        0x0017fc000000ULL,        0x0017fe800000ULL
    },
    {
        0x000000000000ULL,        0x000000002800ULL,        0x000000004000ULL,        0x000000006800ULL,
        0x000000008000ULL,        0x00000000a800ULL,        0x00000000c000ULL,        0x00000000e800ULL,
        0x000000050000ULL,        0x000000052800ULL,        0x000000054000ULL,        0x000000056800ULL,
        0x000000058000ULL,        0x00000005a800ULL,        0x00000005c000ULL,        0x00000005e800ULL,
        0x0000000a0000ULL,        0x0000000a2800ULL,        0x0000000a4000ULL,        0x0000000a6800ULL,
        0x0000000a8000ULL,        0x0000000aa800ULL,        0x0000000ac000ULL,        0x0000000ae800ULL,
        0x0000000f0000ULL,        0x0000000f2800ULL,        0x0000000f4000ULL,        0x0000000f6800ULL,
        0x0000000f8000ULL,        0x0000000fa800ULL,        0x0000000fc000ULL,        0x0000000fe800ULL,
        0x000000100000ULL,        0x000000102800ULL,        0x000000104000ULL,        0x000000106800ULL,
        0x000000108000ULL,        0x00000010a800ULL,        0x00000010c000ULL,        0x00000010e800ULL,
        0x000000150000ULL,        0x000000152800ULL,        0x000000154000ULL,        0x000000156800ULL,
        0x000000158000ULL,        0x00000015a800ULL,        0x00000015c000ULL,        0x00000015e800ULL,
        0x0000001a0000ULL,        0x0000001a2800ULL,        0x0000001a4000ULL,        0x0000001a6800ULL,
        0x0000001a8000ULL,        0x0000001aa800ULL,        0x0000001ac000ULL,        0x0000001ae800ULL,
        0x0000001f0000ULL,        0x0000001f2800ULL,        0x0000001f4000ULL,        0x0000001f6800ULL,
        0x0000001f8000ULL,        0x0000001fa800ULL,        0x0000001fc000ULL,        0x0000001fe800ULL,
        0x000000200000ULL,        0x000000202800ULL,        0x000000204000ULL,        0x000000206800ULL,
        0x000000208000ULL,        0x00000020a800ULL,        0x00000020c000ULL,        0x00000020e800ULL,
        0x000000250000ULL,        0x000000252800ULL,        0x000000254000ULL,        0x000000256800ULL,
        0x000000258000ULL,        0x00000025a800ULL,        0x00000025c000ULL,        0x00000025e800ULL,
        0x0000002a0000ULL,        0x0000002a2800ULL,        0x0000002a4000ULL,        0x0000002a6800ULL,
        0x0000002a8000ULL,        0x0000002aa800ULL,        0x0000002ac000ULL,        0x0000002ae800ULL,
        0x0000002f0000ULL,        0x0000002f2800ULL,        0x0000002f4000ULL,        0x0000002f6800ULL,
        0x0000002f8000ULL,        0x0000002fa800ULL,        0x0000002fc000ULL,        0x0000002fe800ULL,
        0x000000300000ULL,        0x000000302800ULL,        0x000000304000ULL,        0x000000306800ULL,
        0x000000308000ULL,        0x00000030a800ULL,        0x00000030c000ULL,        0x00000030e800ULL,
        0x000000350000ULL,        0x000000352800ULL,        0x000000354000ULL,        0x000000356800ULL,
        0x000000358000ULL,        0x00000035a800ULL,        0x00000035c000ULL,        0x00000035e800ULL,
        0x0000003a0000ULL,        0x0000003a2800ULL,        0x0000003a4000ULL,        0x0000003a6800ULL,
        0x0000003a8000ULL,        0x0000003aa800ULL,        0x0000003ac000ULL,        0x0000003ae800ULL,
        0x0000003f0000ULL,        0x0000003f2800ULL,        0x0000003f4000ULL,        0x0000003f6800ULL,
        0x0000003f8000ULL,        0x0000003fa800ULL,        0x0000003fc000ULL,        0x0000003fe800ULL,
        0x000001400000ULL,        0x000001402800ULL,        0x000001404000ULL,        0x000001406800ULL,
        0x000001408000ULL,        0x00000140a800ULL,        0x00000140c000ULL,        0x00000140e800ULL,
        0x000001450000ULL,        0x000001452800ULL,        0x000001454000ULL,        0x000001456800ULL,
        0x000001458000ULL,        0x00000145a800ULL,        0x00000145c000ULL,        0x00000145e800ULL,
        0x0000014a0000ULL,        0x0000014a2800ULL,        0x0000014a4000ULL,        0x0000014a6800ULL,
        0x0000014a8000ULL,        0x0000014aa800ULL,        0x0000014ac000ULL,        0x0000014ae800ULL,
        0x0000014f0000ULL,        0x0000014f2800ULL,        0x0000014f4000ULL,        0x0000014f6800ULL,
        0x0000014f8000ULL,        0x0000014fa800ULL,        0x0000014fc000ULL,        0x0000014fe800ULL,
        0x000001500000ULL,        0x000001502800ULL,        0x000001504000ULL,        0x000001506800ULL,
        0x000001508000ULL,        0x00000150a800ULL,        0x00000150c000ULL,        0x00000150e800ULL,
        0x000001550000ULL,        0x000001552800ULL,        0x000001554000ULL,        0x000001556800ULL,
        0x000001558000ULL,        0x00000155a800ULL,        0x00000155c000ULL,        0x00000155e800ULL,
        0x0000015a0000ULL,        0x0000015a2800ULL,        0x0000015a4000ULL,        0x0000015a6800ULL,
        0x0000015a8000ULL,        0x0000015aa800ULL,        0x0000015ac000ULL,        0x0000015ae800ULL,
        0x0000015f0000ULL,        0x0000015f2800ULL,        0x0000015f4000ULL,        0x0000015f6800ULL,
        0x0000015f8000ULL,        0x0000015fa800ULL,        0x0000015fc000ULL,        0x0000015fe800ULL,
        0x000001600000ULL,        0x000001602800ULL,        0x000001604000ULL,        0x000001606800ULL,
        0x000001608000ULL,        0x00000160a800ULL,        0x00000160c000ULL,        0x00000160e800ULL,
        0x000001650000ULL,        0x000001652800ULL,        0x000001654000ULL,        0x000001656800ULL,
        0x000001658000ULL,        0x00000165a800ULL,        0x00000165c000ULL,        0x00000165e800ULL,
        0x0000016a0000ULL,        0x0000016a2800ULL,        0x0000016a4000ULL,        0x0000016a6800ULL,
        0x0000016a8000ULL,        0x0000016aa800ULL,        0x0000016ac000ULL,        0x0000016ae800ULL,
        0x0000016f0000ULL,        0x0000016f2800ULL,        0x0000016f4000ULL,        0x0000016f6800ULL,
        0x0000016f8000ULL,        0x0000016fa800ULL,        0x0000016fc000ULL,        0x0000016fe800ULL,
        0x000001700000ULL,        0x000001702800ULL,        0x000001704000ULL,        0x000001706800ULL,
        0x000001708000ULL,        0x00000170a800ULL,        0x00000170c000ULL,        0x00000170e800ULL,
        0x000001750000ULL,        0x000001752800ULL,        0x000001754000ULL,        0x000001756800ULL,
        0x000001758000ULL,        0x00000175a800ULL,        0x00000175c000ULL,        0x00000175e800ULL,
        0x0000017a0000ULL,        0x0000017a2800ULL,        0x0000017a4000ULL,        0x0000017a6800ULL,
        0x0000017a8000ULL,        0x0000017aa800ULL,        0x0000017ac000ULL,        0x0000017ae800ULL,
        0x0000017f0000ULL,        0x0000017f2800ULL,        0x0000017f4000ULL,        0x0000017f6800ULL,
        0x0000017f8000ULL,        0x0000017fa800ULL,        0x0000017fc000ULL,        0x0000017fe800ULL
    },
    {
        0x000000000000ULL,        0x800000000002ULL,        0x000000000004ULL,        0x800000000006ULL,
        0x000000000008ULL,        0x80000000000aULL,        0x00000000000cULL,        0x80000000000eULL,
        0x000000000050ULL,        0x800000000052ULL,        0x000000000054ULL,        0x800000000056ULL,
        0x000000000058ULL,        0x80000000005aULL,        0x00000000005cULL,        0x80000000005eULL,
        0x0000000000a0ULL,        0x8000000000a2ULL,        0x0000000000a4ULL,        0x8000000000a6ULL,
        0x0000000000a8ULL,        0x8000000000aaULL,        0x0000000000acULL,        0x8000000000aeULL,
        0x0000000000f0ULL,        0x8000000000f2ULL,        0x0000000000f4ULL,        0x8000000000f6ULL,
        0x0000000000f8ULL,        0x8000000000faULL,        0x0000000000fcULL,        0x8000000000feULL,
        0x000000000100ULL,        0x800000000102ULL,        0x000000000104ULL,        0x800000000106ULL,
        0x000000000108ULL,        0x80000000010aULL,        0x00000000010cULL,        0x80000000010eULL,
        0x000000000150ULL,        0x800000000152ULL,        0x000000000154ULL,        0x800000000156ULL,
        0x000000000158ULL,        0x80000000015aULL,        0x00000000015cULL,        0x80000000015eULL,
        0x0000000001a0ULL,        0x8000000001a2ULL,        0x0000000001a4ULL,        0x8000000001a6ULL,
        0x0000000001a8ULL,        0x8000000001aaULL,        0x0000000001acULL,        0x8000000001aeULL,
        0x0000000001f0ULL,        0x8000000001f2ULL,        0x0000000001f4ULL,        0x8000000001f6ULL,
        0x0000000001f8ULL,        0x8000000001faULL,        0x0000000001fcULL,        0x8000000001feULL,
        0x000000000200ULL,        0x800000000202ULL,        0x000000000204ULL,        0x800000000206ULL,
        0x000000000208ULL,        0x80000000020aULL,        0x00000000020cULL,        0x80000000020eULL,
        0x000000000250ULL,        0x800000000252ULL,        0x000000000254ULL,        0x800000000256ULL,
        0x000000000258ULL,        0x80000000025aULL,        0x00000000025cULL,        0x80000000025eULL,
        0x0000000002a0ULL,        0x8000000002a2ULL,        0x0000000002a4ULL,        0x8000000002a6ULL,
        0x0000000002a8ULL,        0x8000000002aaULL,        0x0000000002acULL,        0x8000000002aeULL,
        0x0000000002f0ULL,        0x8000000002f2ULL,        0x0000000002f4ULL,        0x8000000002f6ULL,
        0x0000000002f8ULL,        0x8000000002faULL,        0x0000000002fcULL,        0x8000000002feULL,
        0x000000000300ULL,        0x800000000302ULL,        0x000000000304ULL,        0x800000000306ULL,
        0x000000000308ULL,        0x80000000030aULL,        0x00000000030cULL,        0x80000000030eULL,
        0x000000000350ULL,        0x800000000352ULL,        0x000000000354ULL,        0x800000000356ULL,
        0x000000000358ULL,        0x80000000035aULL,        0x00000000035cULL,        0x80000000035eULL,
        0x0000000003a0ULL,        0x8000000003a2ULL,        0x0000000003a4ULL,        0x8000000003a6ULL,
        0x0000000003a8ULL,        0x8000000003aaULL,        0x0000000003acULL,        0x8000000003aeULL,
        0x0000000003f0ULL,        0x8000000003f2ULL,        0x0000000003f4ULL,        0x8000000003f6ULL,
        0x0000000003f8ULL,        0x8000000003faULL,        0x0000000003fcULL,        0x8000000003feULL,
        0x000000001400ULL,        0x800000001402ULL,        0x000000001404ULL,        0x800000001406ULL,
        0x000000001408ULL,        0x80000000140aULL,        0x00000000140cULL,        0x80000000140eULL,
        0x000000001450ULL,        0x800000001452ULL,        0x000000001454ULL,        0x800000001456ULL,
        0x000000001458ULL,        0x80000000145aULL,        0x00000000145cULL,        0x80000000145eULL,
        0x0000000014a0ULL,        0x8000000014a2ULL,        0x0000000014a4ULL,        0x8000000014a6ULL,
        0x0000000014a8ULL,        0x8000000014aaULL,        0x0000000014acULL,        0x8000000014aeULL,
        0x0000000014f0ULL,        0x8000000014f2ULL,        0x0000000014f4ULL,        0x8000000014f6ULL,
        0x0000000014f8ULL,        0x8000000014faULL,        0x0000000014fcULL,        0x8000000014feULL,
        0x000000001500ULL,        0x800000001502ULL,        0x000000001504ULL,        0x800000001506ULL,
        0x000000001508ULL,        0x80000000150aULL,        0x00000000150cULL,        0x80000000150eULL,
        0x000000001550ULL,        0x800000001552ULL,        0x000000001554ULL,        0x800000001556ULL,
        0x000000001558ULL,        0x80000000155aULL,        0x00000000155cULL,        0x80000000155eULL,
        0x0000000015a0ULL,        0x8000000015a2ULL,        0x0000000015a4ULL,        0x8000000015a6ULL,
        0x0000000015a8ULL,        0x8000000015aaULL,        0x0000000015acULL,        0x8000000015aeULL,
        0x0000000015f0ULL,        0x8000000015f2ULL,        0x0000000015f4ULL,        0x8000000015f6ULL,
        0x0000000015f8ULL,        0x8000000015faULL,        0x0000000015fcULL,        0x8000000015feULL,
        0x000000001600ULL,        0x800000001602ULL,        0x000000001604ULL,        0x800000001606ULL,
        0x000000001608ULL,        0x80000000160aULL,        0x00000000160cULL,        0x80000000160eULL,
        0x000000001650ULL,        0x800000001652ULL,        0x000000001654ULL,        0x800000001656ULL,
        0x000000001658ULL,        0x80000000165aULL,        0x00000000165cULL,        0x80000000165eULL,
        0x0000000016a0ULL,        0x8000000016a2ULL,        0x0000000016a4ULL,        0x8000000016a6ULL,
        0x0000000016a8ULL,        0x8000000016aaULL,        0x0000000016acULL,        0x8000000016aeULL,
        0x0000000016f0ULL,        0x8000000016f2ULL,        0x0000000016f4ULL,        0x8000000016f6ULL,
        0x0000000016f8ULL,        0x8000000016faULL,        0x0000000016fcULL,        0x8000000016feULL,
        0x000000001700ULL,        0x800000001702ULL,        0x000000001704ULL,        0x800000001706ULL,
        0x000000001708ULL,        0x80000000170aULL,        0x00000000170cULL,        0x80000000170eULL,
        0x000000001750ULL,        0x800000001752ULL,        0x000000001754ULL,        0x800000001756ULL,
        0x000000001758ULL,        0x80000000175aULL,        0x00000000175cULL,        0x80000000175eULL,
        0x0000000017a0ULL,        0x8000000017a2ULL,        0x0000000017a4ULL,        0x8000000017a6ULL,
        0x0000000017a8ULL,        0x8000000017aaULL,        0x0000000017acULL,        0x8000000017aeULL,
        0x0000000017f0ULL,        0x8000000017f2ULL,        0x0000000017f4ULL,        0x8000000017f6ULL,
        0x0000000017f8ULL,        0x8000000017faULL,        0x0000000017fcULL,        0x8000000017feULL
    }
};

// 优化的S-Boxes大表：每个S盒有64个可能的输入值
static const uint8_t S_BOXES[8][64] = {
    // S1
    {
        14, 4, 13, 1, 2, 15, 11, 8, 3, 10, 6, 12, 5, 9, 0, 7,
        0, 15, 7, 4, 14, 2, 13, 1, 10, 6, 12, 11, 9, 5, 3, 8,
        4, 1, 14, 8, 13, 6, 2, 11, 15, 12, 9, 7, 3, 10, 5, 0,
        15, 12, 8, 2, 4, 9, 1, 7, 5, 11, 3, 14, 10, 0, 6, 13
    },
    // S2
    {
        15, 1, 8, 14, 6, 11, 3, 4, 9, 7, 2, 13, 12, 0, 5, 10,
        3, 13, 4, 7, 15, 2, 8, 14, 12, 0, 1, 10, 6, 9, 11, 5,
        0, 14, 7, 11, 10, 4, 13, 1, 5, 8, 12, 6, 9, 3, 2, 15,
        13, 8, 10, 1, 3, 15, 4, 2, 11, 6, 7, 12, 0, 5, 14, 9
    },
    // S3
    {
        10, 0, 9, 14, 6, 3, 15, 5, 1, 13, 12, 7, 11, 4, 2, 8,
        13, 7, 0, 9, 3, 4, 6, 10, 2, 8, 5, 14, 12, 11, 15, 1,
        13, 6, 4, 9, 8, 15, 3, 0, 11, 1, 2, 12, 5, 10, 14, 7,
        1, 10, 13, 0, 6, 9, 8, 7, 4, 15, 14, 3, 11, 5, 2, 12
    },
    // S4
    {
        7, 13, 14, 3, 0, 6, 9, 10, 1, 2, 8, 5, 11, 12, 4, 15,
        13, 8, 11, 5, 6, 15, 0, 3, 4, 7, 2, 12, 1, 10, 14, 9,
        10, 6, 9, 0, 12, 11, 7, 13, 15, 1, 3, 14, 5, 2, 8, 4,
        3, 15, 0, 6, 10, 1, 13, 8, 9, 4, 5, 11, 12, 7, 2, 14
    },
    // S5
    {
        2, 12, 4, 1, 7, 10, 11, 6, 8, 5, 3, 15, 13, 0, 14, 9,
        14, 11, 2, 12, 4, 7, 13, 1, 5, 0, 15, 10, 3, 9, 8, 6,
        4, 2, 1, 11, 10, 13, 7, 8, 15, 9, 12, 5, 6, 3, 0, 14,
        11, 8, 12, 7, 1, 14, 2, 13, 6, 15, 0, 9, 10, 4, 5, 3
    },
    // S6
    {
        12, 1, 10, 15, 9, 2, 6, 8, 0, 13, 3, 4, 14, 7, 5, 11,
        10, 15, 4, 2, 7, 12, 9, 5, 6, 1, 13, 14, 0, 11, 3, 8,
        9, 14, 15, 5, 2, 8, 12, 3, 7, 0, 4, 10, 1, 13, 11, 6,
        4, 3, 2, 12, 9, 5, 15, 10, 11, 14, 1, 7, 6, 0, 8, 13
    },
    // S7
    {
        4, 11, 2, 14, 15, 0, 8, 13, 3, 12, 9, 7, 5, 10, 6, 1,
        13, 0, 11, 7, 4, 9, 1, 10, 14, 3, 5, 12, 2, 15, 8, 6,
        1, 4, 11, 13, 12, 3, 7, 14, 10, 15, 6, 8, 0, 5, 9, 2,
        6, 11, 13, 8, 1, 4, 10, 7, 9, 5, 0, 15, 14, 2, 3, 12
    },
    // S8
    {
        13, 2, 8, 4, 6, 15, 11, 1, 10, 9, 3, 14, 5, 0, 12, 7,
        1, 15, 13, 8, 10, 3, 7, 4, 12, 5, 6, 11, 0, 14, 9, 2,
        7, 11, 4, 1, 9, 12, 14, 2, 0, 6, 10, 13, 15, 3, 5, 8,
        2, 1, 14, 7, 4, 10, 8, 13, 15, 12, 9, 0, 3, 5, 6, 11
    }
};

// P 置换表
static const int P[32] = {
    16,  7, 20, 21,
    29, 12, 28, 17,
     1, 15, 23, 26,
     5, 18, 31, 10,
     2,  8, 24, 14,
    32, 27,  3,  9,
    19, 13, 30,  6,
    22, 11,  4, 25
};


// 将输入的 8 字节密钥转换为 64 位整型
static inline uint64_t bytes_to_uint48(const unsigned char* subKey) {
    return ((uint64_t)subKey[0] << 40) |
           ((uint64_t)subKey[1] << 32) |
           ((uint64_t)subKey[2] << 24) |
           ((uint64_t)subKey[3] << 16) |
           ((uint64_t)subKey[4] << 8)  |
           ((uint64_t)subKey[5]);
}


// 通用置换函数
static inline uint64_t permute(uint64_t input, int input_size, const int *table, int n) {
    uint64_t output = 0;

    for (int i = 0; i < n; i += 8) {
        // 从输入中提取 8 位
        uint8_t bit1 = (input >> (input_size - table[i])) & 1ULL;
        uint8_t bit2 = (input >> (input_size - table[i + 1])) & 1ULL;
        uint8_t bit3 = (input >> (input_size - table[i + 2])) & 1ULL;
        uint8_t bit4 = (input >> (input_size - table[i + 3])) & 1ULL;
        uint8_t bit5 = (input >> (input_size - table[i + 4])) & 1ULL;
        uint8_t bit6 = (input >> (input_size - table[i + 5])) & 1ULL;
        uint8_t bit7 = (input >> (input_size - table[i + 6])) & 1ULL;
        uint8_t bit8 = (input >> (input_size - table[i + 7])) & 1ULL;

        // 组合这 8 位到正确的位置
        uint64_t combined_bits = (bit1 << 7) | (bit2 << 6) | (bit3 << 5) | (bit4 << 4) |
                                 (bit5 << 3) | (bit6 << 2) | (bit7 << 1) | bit8;

        // 将这 8 位插入输出
        output |= (combined_bits << (n - i - 8));
    }

    return output;
}

// S 盒置换内联函数
inline uint32_t S_BOX(uint64_t input) {
    uint32_t output = 0;
    for (int i = 0; i < 8; i++) {
        // 提取6位块，直接查表
        uint8_t six_bits = (input >> (42 - 6 * i)) & 0x3F;

        six_bits = (six_bits & 0x20) | ((six_bits & 0x01) << 4) | ((six_bits & 0x1E) >> 1);

        uint8_t sbox_value = S_BOXES[i][six_bits];  // 从优化的大表中直接查询
        output |= (uint32_t)sbox_value << (28 - 4 * i);  // 拼接结果
    }
  return output;
}


// 左移函数
static inline void rotate_left(unsigned char *key, int n, int bits) {
    unsigned char temp = 0;
    for (int i = 0; i < bits; i++) {
        temp = (key[0] >> 7) & 1; 
        for (int j = 0; j < n; j++) {
            key[j] = (key[j] << 1) | ((key[j + 1] >> 7) & 1);
        }
        key[n - 1] = (key[n - 1] << 1) | temp;
    }
}

